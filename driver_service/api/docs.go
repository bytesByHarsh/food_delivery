// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Harsh Mittal",
            "email": "harshmittal2210@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get string by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "Hello API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JSONResp"
                        }
                    }
                }
            }
        },
        "/drivers/list": {
            "get": {
                "description": "driver list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Get Driver List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Items Per Page",
                        "name": "items_per_page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_bytesByHarsh_food_delivery_driver_service_models.PaginatedListResp-models_Driver"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        },
        "/drivers/login": {
            "post": {
                "description": "get login token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login Driver",
                "parameters": [
                    {
                        "description": "Login Body",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        },
        "/drivers/me": {
            "get": {
                "description": "get driver details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Get Driver",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Driver"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        },
        "/drivers/me/password": {
            "put": {
                "description": "update driver password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Update Driver Password",
                "parameters": [
                    {
                        "description": "Password Body",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePasswordReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        },
        "/drivers/register": {
            "post": {
                "description": "create new driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Create Driver",
                "parameters": [
                    {
                        "description": "Driver Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDriverByAdminReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Driver"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        },
        "/drivers/{id}": {
            "get": {
                "description": "get another driver details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Get Another Driver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Driver"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete driver from db by admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Delete driver from DB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "description": "create new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Add New Order",
                "parameters": [
                    {
                        "description": "Order Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateOrderReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        },
        "/orders/list/unassigned": {
            "get": {
                "description": "get order list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get Unassigned Order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Items Per Page",
                        "name": "items_per_page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        },
        "/orders/{id}/accept": {
            "put": {
                "description": "accept order by driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Accept Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JSONResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        },
        "/orders/{id}/status": {
            "put": {
                "description": "update order status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update Order Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "status Body",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateOrderStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JSONResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JSONerrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_bytesByHarsh_food_delivery_driver_service_internal_database.OrderStatus": {
            "type": "string",
            "enum": [
                "assigned",
                "in-progress",
                "completed",
                "cancelled",
                "unassigned"
            ],
            "x-enum-varnames": [
                "OrderStatusAssigned",
                "OrderStatusInProgress",
                "OrderStatusCompleted",
                "OrderStatusCancelled",
                "OrderStatusUnassigned"
            ]
        },
        "github_com_bytesByHarsh_food_delivery_driver_service_models.PaginatedListResp-models_Driver": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Driver"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "items_per_page": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.AuthReq": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.AuthResp": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "models.CreateDriverByAdminReq": {
            "type": "object",
            "required": [
                "age",
                "email",
                "name",
                "password",
                "phone_num",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_num": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.CreateOrderReq": {
            "type": "object",
            "required": [
                "cash_amount",
                "customer_addr",
                "customer_id",
                "customer_lat",
                "customer_long",
                "customer_name",
                "customer_phone",
                "delivery_dist",
                "earning",
                "is_cash_payment",
                "order_id",
                "restaurant_addr",
                "restaurant_id",
                "restaurant_lat",
                "restaurant_long",
                "restaurant_name",
                "tip"
            ],
            "properties": {
                "cash_amount": {
                    "type": "number"
                },
                "customer_addr": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "customer_lat": {
                    "type": "string"
                },
                "customer_long": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "customer_phone": {
                    "type": "string"
                },
                "delivery_dist": {
                    "type": "number"
                },
                "earning": {
                    "type": "number"
                },
                "is_cash_payment": {
                    "type": "boolean"
                },
                "order_id": {
                    "type": "string"
                },
                "restaurant_addr": {
                    "type": "string"
                },
                "restaurant_id": {
                    "type": "string"
                },
                "restaurant_lat": {
                    "type": "string"
                },
                "restaurant_long": {
                    "type": "string"
                },
                "restaurant_name": {
                    "type": "string"
                },
                "tip": {
                    "type": "integer"
                }
            }
        },
        "models.Driver": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_superuser": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "profile_img": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.DriverOrderStatus": {
            "type": "string",
            "enum": [
                "on_the_way",
                "reached",
                "delivered",
                "returned",
                "canceled"
            ],
            "x-enum-varnames": [
                "OrderStatusOnTheWay",
                "OrderStatusReached",
                "OrderStatusDelivered",
                "OrderStatusReturned",
                "OrderStatusCancelled"
            ]
        },
        "models.JSONResp": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.JSONerrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "assigned_at": {
                    "type": "string"
                },
                "cash_amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_addr": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "customer_lat": {
                    "type": "string"
                },
                "customer_long": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "customer_phone": {
                    "type": "string"
                },
                "delivery_dist": {
                    "type": "number"
                },
                "driver_id": {
                    "$ref": "#/definitions/uuid.NullUUID"
                },
                "earning": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "is_cash_payment": {
                    "type": "boolean"
                },
                "order_id": {
                    "type": "string"
                },
                "restaurant_addr": {
                    "type": "string"
                },
                "restaurant_id": {
                    "type": "string"
                },
                "restaurant_lat": {
                    "type": "string"
                },
                "restaurant_long": {
                    "type": "string"
                },
                "restaurant_name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/github_com_bytesByHarsh_food_delivery_driver_service_internal_database.OrderStatus"
                },
                "tip": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UpdateOrderStatusReq": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/models.DriverOrderStatus"
                }
            }
        },
        "models.UpdatePasswordReq": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "uuid.NullUUID": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if UUID is not NULL",
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

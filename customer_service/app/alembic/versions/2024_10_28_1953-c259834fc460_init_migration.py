"""Init Migration

Revision ID: c259834fc460
Revises:
Create Date: 2024-10-28 19:53:48.901002

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

from app.core.config import settings


# revision identifiers, used by Alembic.
revision: str = "c259834fc460"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

accesslevel_enum_name = "accesslevel_enum"
accesslevel_enum = sa.Enum(
    "ADMIN", "USER", "GUEST", "MODERATOR", name=accesslevel_enum_name
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(f"DROP TYPE IF EXISTS {accesslevel_enum_name}")

    op.create_table(
        "system_token_blacklist",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_system_token_blacklist_id"),
        "system_token_blacklist",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_system_token_blacklist_token"),
        "system_token_blacklist",
        ["token"],
        unique=False,
    )
    op.create_table(
        f"{settings.DATABASE_USER_TABLE}",
        sa.Column(
            "user_role",
            accesslevel_enum,
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column(
            "profile_image_url", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column(
            "username", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False
        ),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f(f"ix_{settings.DATABASE_USER_TABLE}_email"),
        f"{settings.DATABASE_USER_TABLE}",
        ["email"],
        unique=True,
    )
    op.create_index(
        op.f(f"ix_{settings.DATABASE_USER_TABLE}_id"),
        f"{settings.DATABASE_USER_TABLE}",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f(f"ix_{settings.DATABASE_USER_TABLE}_is_deleted"),
        f"{settings.DATABASE_USER_TABLE}",
        ["is_deleted"],
        unique=False,
    )
    op.create_index(
        op.f(f"ix_{settings.DATABASE_USER_TABLE}_username"),
        f"{settings.DATABASE_USER_TABLE}",
        ["username"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f(f"ix_{settings.DATABASE_USER_TABLE}_username"),
        table_name=f"{settings.DATABASE_USER_TABLE}",
    )
    op.drop_index(
        op.f(f"ix_{settings.DATABASE_USER_TABLE}_is_deleted"),
        table_name=f"{settings.DATABASE_USER_TABLE}",
    )
    op.drop_index(
        op.f(f"ix_{settings.DATABASE_USER_TABLE}_id"),
        table_name=f"{settings.DATABASE_USER_TABLE}",
    )
    op.drop_index(
        op.f(f"ix_{settings.DATABASE_USER_TABLE}_email"),
        table_name=f"{settings.DATABASE_USER_TABLE}",
    )
    op.drop_table(f"{settings.DATABASE_USER_TABLE}")
    op.drop_index(
        op.f("ix_system_token_blacklist_token"), table_name="system_token_blacklist"
    )
    op.drop_index(
        op.f("ix_system_token_blacklist_id"), table_name="system_token_blacklist"
    )
    op.drop_table("system_token_blacklist")
    # ### end Alembic commands ###
